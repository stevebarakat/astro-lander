---
export type OpenGraphProps = {
  title: string;
  description: string;
  image?: string;
  url?: string;
  type?: "website" | "article" | "product";
  siteName?: string;
  locale?: string;
  imageWidth?: number;
  imageHeight?: number;
  imageAlt?: string;
  articleAuthor?: string;
  articlePublishedTime?: string;
  articleModifiedTime?: string;
  articleSection?: string;
  articleTag?: string;
};

const {
  title,
  description,
  image,
  url,
  type = "website",
  siteName = "Astro Lander",
  locale = "en_US",
  imageWidth = 1200,
  imageHeight = 630,
  imageAlt,
  articleAuthor,
  articlePublishedTime,
  articleModifiedTime,
  articleSection,
  articleTag,
} = Astro.props;

const fullTitle = title.includes("Astro Lander")
  ? title
  : `${title} | Astro Lander`;
const fullImageUrl = image?.startsWith("http")
  ? image
  : image
    ? `${Astro.site}${image}`
    : `${Astro.site}/og-default.jpg`;
const fullUrl = url
  ? url.startsWith("http")
    ? url
    : `${Astro.site}${url}`
  : Astro.url.href;
---

<meta property="og:type" content={type} />
<meta property="og:title" content={fullTitle} />
<meta property="og:description" content={description} />
<meta property="og:url" content={fullUrl} />
<meta property="og:site_name" content={siteName} />
<meta property="og:locale" content={locale} />

{
  image && (
    <>
      <meta property="og:image" content={fullImageUrl} />
      <meta property="og:image:width" content={imageWidth.toString()} />
      <meta property="og:image:height" content={imageHeight.toString()} />
      {imageAlt && <meta property="og:image:alt" content={imageAlt} />}
    </>
  )
}

{
  type === "article" && articleAuthor && (
    <>
      <meta property="article:author" content={articleAuthor} />
      {articlePublishedTime && (
        <meta
          property="article:published_time"
          content={articlePublishedTime}
        />
      )}
      {articleModifiedTime && (
        <meta property="article:modified_time" content={articleModifiedTime} />
      )}
      {articleSection && (
        <meta property="article:section" content={articleSection} />
      )}
      {articleTag && <meta property="article:tag" content={articleTag} />}
    </>
  )
}

<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={fullTitle} />
<meta name="twitter:description" content={description} />
{image && <meta name="twitter:image" content={fullImageUrl} />}
